From 193a981a44e2bc119724c7937f4b04bdcdcc70ff Mon Sep 17 00:00:00 2001
From: Yang Chen <chenyang@cs.utah.edu>
Date: Wed, 8 Aug 2018 22:53:52 -0700
Subject: [PATCH 04/31] Handle DependentScopeDeclRefExpr

make an auto-type tmp variable for a DependentScopeDeclRefExpr
---
 clang_delta/RemoveNestedFunction.cpp | 11 +++++++++++
 clang_delta/RemoveNestedFunction.h   |  2 ++
 2 files changed, 13 insertions(+)

diff --git a/clang_delta/RemoveNestedFunction.cpp b/clang_delta/RemoveNestedFunction.cpp
index 60ae7b2..7666207 100644
--- a/clang_delta/RemoveNestedFunction.cpp
+++ b/clang_delta/RemoveNestedFunction.cpp
@@ -215,6 +215,11 @@ void RemoveNestedFunction::getNewIntTmpVariable(std::string &VarStr)
   VarStr = "int " + VarStr;
 }
 
+void RemoveNestedFunction::getNewAutoTmpVariable(std::string &VarStr)
+{
+  VarStr = "auto " + VarStr;
+}
+
 void RemoveNestedFunction::addNewTmpVariable(ASTContext &ASTCtx)
 {
   std::string VarStr;
@@ -437,6 +442,12 @@ void RemoveNestedFunction::getNewTmpVariableStr(ASTContext &ASTCtx,
     }
   }
 
+  // We can't resolve dependent scoped DeclRefExpr, and just make it
+  // type of int.
+  if (dyn_cast<DependentScopeDeclRefExpr>(E)) {
+    return getNewAutoTmpVariable(VarStr);
+  }
+
   const Type *CalleeType = E->getType().getTypePtr();
   // template <class T1, class T2> struct S {
   //   T1 x; T2 y;
diff --git a/clang_delta/RemoveNestedFunction.h b/clang_delta/RemoveNestedFunction.h
index 1d6c28e..231689a 100644
--- a/clang_delta/RemoveNestedFunction.h
+++ b/clang_delta/RemoveNestedFunction.h
@@ -81,6 +81,8 @@ private:
 
   void getNewIntTmpVariable(std::string &VarStr);
 
+  void getNewAutoTmpVariable(std::string &VarStr);
+
   clang::SmallVector<clang::CallExpr *, 5> CallExprQueue;
 
   clang::SmallVector<clang::CallExpr *, 10> ValidCallExprs;
-- 
2.21.0

