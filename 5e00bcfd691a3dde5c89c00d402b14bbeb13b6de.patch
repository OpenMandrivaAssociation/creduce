From 5e00bcfd691a3dde5c89c00d402b14bbeb13b6de Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Bernhard=20Rosenkr=C3=A4nzer?= <bero@lindev.ch>
Date: Wed, 5 May 2021 16:13:42 +0200
Subject: [PATCH] Fix build with LLVM/clang 12.0.0 final
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Bernhard Rosenkr√§nzer <bero@lindev.ch>
---
 clang_delta/TransformationManager.cpp | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/clang_delta/TransformationManager.cpp b/clang_delta/TransformationManager.cpp
index 98fc67ec..632a79c5 100644
--- a/clang_delta/TransformationManager.cpp
+++ b/clang_delta/TransformationManager.cpp
@@ -21,6 +21,7 @@
 #include "clang/Basic/FileManager.h"
 #include "clang/Basic/TargetInfo.h"
 #include "clang/Lex/Preprocessor.h"
+#include "clang/Lex/PreprocessorOptions.h"
 #include "clang/Frontend/CompilerInstance.h"
 #include "clang/Parse/ParseAST.h"
 
@@ -104,13 +105,13 @@ bool TransformationManager::initializeCompilerInstance(std::string &ErrorMsg)
   InputKind IK = FrontendOptions::getInputKindForExtension(
         StringRef(SrcFileName).rsplit('.').second);
   if (IK.getLanguage() == Language::C) {
-    Invocation.setLangDefaults(ClangInstance->getLangOpts(), Language::C, T, PPOpts);
+    Invocation.setLangDefaults(ClangInstance->getLangOpts(), Language::C, T, PPOpts.Includes);
   }
   else if (IK.getLanguage() == Language::CXX) {
     // ISSUE: it might cause some problems when building AST
     // for a function which has a non-declared callee, e.g.,
     // It results an empty AST for the caller.
-    Invocation.setLangDefaults(ClangInstance->getLangOpts(), Language::CXX, T, PPOpts);
+    Invocation.setLangDefaults(ClangInstance->getLangOpts(), Language::CXX, T, PPOpts.Includes);
   }
   else if(IK.getLanguage() == Language::OpenCL) {
     //Commandline parameters
@@ -137,7 +138,7 @@ bool TransformationManager::initializeCompilerInstance(std::string &ErrorMsg)
 		                       ArrayRef<const char*>(&Args[0], &Args[0] + Args.size()),
                                        ClangInstance->getDiagnostics());
     Invocation.setLangDefaults(ClangInstance->getLangOpts(),
-                               Language::OpenCL, T, PPOpts);
+                               Language::OpenCL, T, PPOpts.Includes);
   }
   else {
     ErrorMsg = "Unsupported file type!";
