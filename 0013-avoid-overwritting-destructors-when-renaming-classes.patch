From daee960a14d739c4124c7ea7adccfad4c69f5966 Mon Sep 17 00:00:00 2001
From: Yang Chen <chenyang@cs.utah.edu>
Date: Tue, 28 Aug 2018 00:41:09 -0700
Subject: [PATCH 13/31] avoid overwritting destructors when renaming classes

---
 clang_delta/CommonRenameClassRewriteVisitor.h    |  8 ++++++++
 clang_delta/tests/rename-class/rename-class2.cpp | 11 +++++++++++
 2 files changed, 19 insertions(+)
 create mode 100644 clang_delta/tests/rename-class/rename-class2.cpp

diff --git a/clang_delta/CommonRenameClassRewriteVisitor.h b/clang_delta/CommonRenameClassRewriteVisitor.h
index ff755a8..725b8c9 100644
--- a/clang_delta/CommonRenameClassRewriteVisitor.h
+++ b/clang_delta/CommonRenameClassRewriteVisitor.h
@@ -242,6 +242,14 @@ bool CommonRenameClassRewriteVisitor<T>::VisitCXXDestructorDecl(
       return true;
   }
 
+  SourceLocation StartLoc = DtorDecl->getLocation();
+  // skip '~'
+  StartLoc = StartLoc.getLocWithOffset(1);
+  void *LocPtr = StartLoc.getPtrEncoding();
+  if (VisitedLocs.count(LocPtr))
+    return true;
+  VisitedLocs.insert(LocPtr);
+
   std::string Name;
   if (getNewName(CXXRD, Name)) {
     RewriteHelper->replaceCXXDestructorDeclName(DtorDecl, Name);
diff --git a/clang_delta/tests/rename-class/rename-class2.cpp b/clang_delta/tests/rename-class/rename-class2.cpp
new file mode 100644
index 0000000..499dd4f
--- /dev/null
+++ b/clang_delta/tests/rename-class/rename-class2.cpp
@@ -0,0 +1,11 @@
+// RUN: %clang_delta --transformation=rename-class --counter=1 %s 2>&1 | %remove_lit_checks | FileCheck %s
+
+// CHECK: struct A {
+struct ababababababababab {
+// CHECK-NEXT: ~A();
+  ~ababababababababab();
+// CHECK-NEXT: };
+};
+// CHECK-NEXT: A::~A() {}
+ababababababababab::~ababababababababab() {}
+
-- 
2.21.0

